#ifndef grab_TASK_H
#define grab_TASK_H
#include "remote_control.h"
#include "motor.h"
#include "PID.h"

#ifndef INNER     //速度环PID
#define INNER 0
#endif

#ifndef OUTER      //位置环PID
#define OUTER 1
#endif

#define HALF_ECD_RANGE  		4096
#define MAX_ECD_RANGE 			8191
#define MOTOR_ECD_TO_360 		0.04395068f

#define SEMIAUTO 1     	//半自动取弹标志
#define AUTO 2    		  //手动取弹标志
#define zerolength 0
#define firstlength 1   //取弹气缸第一排标志
#define secondlength 2  //取弹气缸第二排标志

#define grab_pickupBox() 			GPIO_SetBits(GPIOC, GPIO_Pin_4);                  //夹住弹药箱
#define grab_throwBox() 			GPIO_ResetBits(GPIOC, GPIO_Pin_4);	              //松开弹药箱

#define grab_allDown() 	GPIO_SetBits(GPIOA, GPIO_Pin_5);                          //整体下降
#define grab_allUp()  	GPIO_ResetBits(GPIOA, GPIO_Pin_5);                        //整体上升

#define grab_armLength_open() 	GPIO_ResetBits(GPIOC, GPIO_Pin_3);            //取弹第二排气缸打开
#define grab_armLength_close() 	GPIO_SetBits(GPIOC, GPIO_Pin_3);              //取弹第二排气缸关闭

#define centerOver					GPIO_ReadInputDataBit(GPIOC, GPIO_Pin_1)          //中间光电开关
#define leftOver						GPIO_ReadInputDataBit(GPIOI, GPIO_Pin_9)          //左侧光电开关
#define rightOver						GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_4)          //右侧光电开关

#define grab_FIRST_PRESS_W		(!IF_LAST_KEY_PRESSED_W(grabTaskStructure.rc.last) && IF_KEY_PRESSED_W)
#define grab_FIRST_PRESS_S		(!IF_LAST_KEY_PRESSED_S(grabTaskStructure.rc.last) && IF_KEY_PRESSED_S)
#define grab_FIRST_PRESS_A		(!IF_LAST_KEY_PRESSED_A(grabTaskStructure.rc.last) && IF_KEY_PRESSED_A)
#define grab_FIRST_PRESS_D		(!IF_LAST_KEY_PRESSED_D(grabTaskStructure.rc.last) && IF_KEY_PRESSED_D)
#define grab_FIRST_PRESS_Q		(!IF_LAST_KEY_PRESSED_Q(grabTaskStructure.rc.last) && IF_KEY_PRESSED_Q)
#define grab_FIRST_PRESS_E		(!IF_LAST_KEY_PRESSED_E(grabTaskStructure.rc.last) && IF_KEY_PRESSED_E)
#define grab_FIRST_PRESS_G		(!IF_LAST_KEY_PRESSED_G(grabTaskStructure.rc.last) && IF_KEY_PRESSED_G)
#define grab_FIRST_PRESS_X		(!IF_LAST_KEY_PRESSED_X(grabTaskStructure.rc.last) && IF_KEY_PRESSED_X)
#define grab_FIRST_PRESS_Z		(!IF_LAST_KEY_PRESSED_Z(grabTaskStructure.rc.last) && IF_KEY_PRESSED_Z)
#define grab_FIRST_PRESS_C		(!IF_LAST_KEY_PRESSED_C(grabTaskStructure.rc.last) && IF_KEY_PRESSED_C)
#define grab_FIRST_PRESS_B		(!IF_LAST_KEY_PRESSED_B(grabTaskStructure.rc.last) && IF_KEY_PRESSED_B)
#define grab_FIRST_PRESS_V		(!IF_LAST_KEY_PRESSED_V(grabTaskStructure.rc.last) && IF_KEY_PRESSED_V)
#define grab_FIRST_PRESS_F		(!IF_LAST_KEY_PRESSED_F(grabTaskStructure.rc.last) && IF_KEY_PRESSED_F)
#define grab_FIRST_PRESS_R		(!IF_LAST_KEY_PRESSED_R(grabTaskStructure.rc.last) && IF_KEY_PRESSED_R)
#define grab_FIRST_PRESS_CTRL	(!IF_LAST_KEY_PRESSED_CTRL(grabTaskStructure.rc.last) && IF_KEY_PRESSED_CTRL)
#define grab_FIRST_PRESS_SHIFT	(!IF_LAST_KEY_PRESSED_SHIFT(grabTaskStructure.rc.last) && IF_KEY_PRESSED_SHIFT)

#define grab_FIRST_S1_UP			(IF_RC_SW1_UP && (grabTaskStructure.rc.last.rc.s[0] != 1))
#define grab_FIRST_S1_DOWN			(IF_RC_SW1_DOWN && (grabTaskStructure.rc.last.rc.s[0] != 2))
#define grab_FIRST_S1_MID			(IF_RC_SW1_MID && (grabTaskStructure.rc.last.rc.s[0] != 3))

#define grab_FIRST_S2_UP			(IF_RC_SW2_UP && (grabTaskStructure.rc.last.rc.s[1] != 1))
#define grab_FIRST_S2_DOWN			(IF_RC_SW2_DOWN && (grabTaskStructure.rc.last.rc.s[1] != 2))
#define grab_FIRST_S2_MID			(IF_RC_SW2_MID && (grabTaskStructure.rc.last.rc.s[1] != 3))

#define grab_FIRST_MOUSE_X_STOP	MOUSE_X_MOVE_SPEED == 0 && grabTaskStructure.rc.last.mouse.x != 0
#define grab_FIRST_MOUSE_Y_STOP	MOUSE_Y_MOVE_SPEED == 0 && grabTaskStructure.rc.last.mouse.y != 0
#define grab_FIRST_CH0_MID		RC_CH0_RLR_OFFSET == 0 && grabTaskStructure.rc.last.rc.ch[0] != 0
#define grab_FIRST_CH1_MID		RC_CH1_RUD_OFFSET == 0 && grabTaskStructure.rc.last.rc.ch[1] != 0
#define grab_FIRST_CH2_MID		RC_CH2_LLR_OFFSET == 0 && grabTaskStructure.rc.last.rc.ch[2] != 0
#define grab_FIRST_CH3_MID		RC_CH3_LUD_OFFSET == 0 && grabTaskStructure.rc.last.rc.ch[3] != 0

#define grab_LRMOTOR_REDUCTION_RATIO 19              //电机减速比
#define grab_TMMOTOR_REDUCTION_RATIO 36              //同步带周长L = (732*2+PI*28) 同步带带轮直径D = 28 减速比 36   计算结果 L/D*36 = 1995.383

#define grab_CANBUS_SEND_HEADER 0x200

typedef enum
{
  grab_MOTOR_POSITION = 0,  	//双环控制电机
  grab_MOTOR_SPEED, 			//速度环控制电机
  grab_MOTOR_RAW,
} grab_motor_mode_e;

typedef enum
{
  grab_MOTOR_LEFT = 0,
  grab_MOTOR_RIGHT,	
	grab_MOTOR_2006,
} grab_motor_type_e;

typedef struct
{
  motor_measure_t base_inf;	
  fp32 currentSet;
  float rawcurrentSet;    
	uint16_t position;   //电机实际位置
	float ARE;        //电机实际位置与期望的绝对相对误差
  float speed;      //电机实际速度
	float speedExp;   //电机速度期望
	float nowExp;     //电机位置期望
  float normalExp;  //非取弹模式下电机位置期望
  float readyExp;   //预取弹电机位置期望
  float outExp;     //夹取弹药箱电机位置期望
  grab_motor_mode_e mode;
  PidTypeDef PIDParameter[2];
} grab_motor_t;

typedef struct
{
  motor_measure_t base_inf;	
  fp32 currentSet;
  float rawcurrentSet;    
	float relative_ecd;
	float zero_ecd;
	uint16_t position;
	u8 rotateNum;
  float speed;
	float speedExp;
  float nowExp;
  float leftBox;
	float midBox;
	float rightBox;
  grab_motor_mode_e mode;
  PidTypeDef PIDParameter[2];
} track_motor_t;

typedef enum
{
	grab_DEBUG = 0,    //调试
	grab_ZERO_FORCE,	 //无力
	grab_INIT,         //初始化
	grab_DOING,        //取弹
	grab_NORMAL,		 //常规模式
	grab_BEHAVIOUR_LENGTH,
} grab_behaviour_e;

typedef struct
{
	grab_motor_mode_e leftGetmode;
	grab_motor_mode_e rightGetmode;
	grab_motor_mode_e trackMovemode;
	grab_behaviour_e num;
	void (*behaviorHandleFun)(float *leftgetboxExp, float *rightgetboxExp, float *trackmoveExp); //此模式的主要处理函数，最终要修改pid计算的期望值
	bool_t (*enterBehaviorCondition)(void); //进入该模式的条件
	bool_t (*outBehaviorCondition)(void);	//退出该模式的条件
	void (*enterBehaviorFun)(void); //进入该模式的处理
	void (*outBehaviorFun)(void);	//退出该模式的处理	
} grab_behaviour_t;

typedef struct
{
	grab_motor_t leftGetboxMotor;
	grab_motor_t rightGetboxMotor;
	track_motor_t trackmoveMotor;
	
	struct
	{
		const RC_ctrl_t *now; //遥控器当前值
		RC_ctrl_t last; //遥控器上一次的值
	} rc;
	
	grab_behaviour_t behaviorList[grab_BEHAVIOUR_LENGTH];
	grab_behaviour_t *nowBehaviour;
	u8 behaviourStep;	//行为的步骤
	u8 grabmode;  //取弹模式  半自动 自动
	u8 armlength;          //气缸伸出长度
	u8 trackExp;         //横向电机期望编号 0代表左 1代表中 2代表右
	
} grabCtrl_t;
void grabInit(void);
void grabTask(void *pvParameters);
void grabBehaviorChange(grab_behaviour_t *next);
void grabCanBusCtrlMotors(s16 leftgetboxCurrent, s16 rightgetboxCurrent, s16 trackmoveCurrent);
u8 ifGetBox_auto(void);
fp32 Absolute_Relative_Error(fp32 positionExp, uint16_t positionReal);

extern grabCtrl_t grabTaskStructure;

#endif
